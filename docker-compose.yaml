version: "3.8"

services:

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "80:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
    - kafka
    networks:
      - app-network

  zookeeper:
    image: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "./docker/zookeeper_data:/bitnami"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
      ZOOKEEPER_CLIENT_PORT: 21281
    networks:
      - app-network

  kafka:
    image: wurstmeister/kafka
    environment:
      KAFKA_BROKER_ID: 500
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - app-network 

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: messages
    networks:
      - app-network


  admin:
    image: adminer
    restart: always
    depends_on:
      - postgres
    ports:
      - 81:8080
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile.app
    depends_on:
      - kafka-ui
      - postgres
    ports:
      - "8081:8081"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge





